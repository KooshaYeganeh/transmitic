<html>

<head>
    <title>My Shared</title>
    <style>
        @import url(style.css);

        div.file-drop-zone {
            /* prototype: FileDropZone; */
            /* height: 5em; */
            width: 15em;
            color: color(button-back);
            border: 2px dashed;
            vertical-align: middle;
            text-align: center;
            margin: 0em 0em 0em 1em;
            padding: 6dip 10dip 6dip 10dip;
            display: inline-block;
        }

        div.file-drop-zone.active-target {
            background: color(highlight-t);
            border-color: color(panel-back);
            color: #000;
        }
    </style>
    <script src="global_transmitic.js"></script>
    <script type="module">

        import * as Environment from "@env";

        class FileDropZone extends Element {
            files = []; // filtered files

            render() {
                return <div class="file-drop-zone">
                    Drop file(s) and folder(s) here
                </div>
            }

            ondragaccept(evt) {
                if (evt.detail.dataType == "file") {
                    this.files = evt.detail.data;
                    if (!Array.isArray(this.files))
                        this.files = [this.files];
                    return true; // accept only files
                }
            }

            ondragenter(evt) {
                this.classList.add("active-target");
                return true;
            }

            ondragleave(evt) {
                this.classList.remove("active-target");
                return true;
            }

            ondrag(evt) {
                return true;
            }

            ondrop(evt) {
                this.classList.remove("active-target");

                for (let i = 0; i < this.files.length; i++) {
                    this.files[i] = decodeURI(this.files[i]);
                }

                let response = Window.this.xcall('add_files', [this.files]); // Weird: files is already array but I need this extra array here
                if (response[0] == 0) {
                    setMsgBoxSuccess("File(s) added to share.");
                    this.parentElement.parentElement.parentElement.componentUpdate();
                }
                else {
                    setMsgBoxError("Failed to add files. " + response[1]);
                }

                return true;
            }

        }

        class AFile extends Element {

            filePath;

            this(props) {
                this.filePath = props.filePath;
            }

            render(props) {

                let sharedWithBlock = <div></div>
                if (props.sharedWith.length != 0) {
                    sharedWithBlock = <div>
                        <div style="padding: 1em 0 1em 0;">
                            Shared With:
                        </div>

                        <div class="shared-with">
                            {props.sharedWith.map((d, index) => <div style="padding-bottom: 1em;">{index + 1}. {d} <button style="margin-left: 1em;" class="remove-shared-with" user={d}>Remove</button></div>)}
                        </div>
                    </div>

                }

                return <div class="my-file" selectable>
                    <span><strong>{props.filePath}</strong></span>
                    <br /><br />
                    <div class="my-file-inner">
                        <label style="margin-right: 1em; display: inline-block;" for="add-user">Add User:</label>

                        <select name="add-user" id="add-user">
                            <option value=""></option>
                            {props.addUsers.map((d) => <option value={d}>{d}</option>)}
                        </select>
                        {sharedWithBlock}
                        <br />
                        <button class="remove-sharing danger-button">Remove file from Sharing</button>
                    </div>
                    <br />
                    <hr />
                    <br />
                </div>
            }

            ["on change at select#add-user"](evt, btn) {
                let selected_user = btn.value;
                if (!selected_user) {
                    return;
                }
                let response = Window.this.xcall('add_user_to_shared', selected_user, this.filePath);
                if (response[0] == 0) {
                    setMsgBoxSuccess("User added. Now sharing file <strong>" + this.filePath + "</strong> with <strong>" + selected_user + "</strong>");
                    this.parentElement.componentUpdate();
                }
                else {
                    setMsgBoxError("Failed to share with user. " + response[1]);
                }
            }

            ["on click at button.remove-shared-with"](evt, btn) {
                let user = btn.getAttribute("user");
                let response = Window.this.xcall('remove_user_from_sharing', user, this.filePath);
                if (response[0] == 0) {
                    setMsgBoxSuccess("User removed. You will no longer share file <strong>" + this.filePath + "</strong> with <strong>" + user + "</strong>");
                    this.parentElement.componentUpdate();
                }
                else {
                    setMsgBoxError("Failed to remove user.");
                }
            }

            ["on click at button.remove-sharing"]() {
                let response = Window.this.xcall('remove_file_from_sharing', this.filePath);
                if (response[0] == 0) {
                    setMsgBoxSuccess("File removed. You will no longer be sharing <strong>" + this.filePath + "</strong>");
                    this.parentElement.componentUpdate();
                }
                else {
                    setMsgBoxError("Failed to remove file from sharing.");
                }
            }
        }

        class MyFiles extends Element {

            this(props) {

            }

            render(props) {
                let my_files = Window.this.xcall('get_my_sharing_files');

                let drop = <span></span>;
                if (Environment.PLATFORM != "Linux") {
                    drop = <span> | <FileDropZone /></span>;
                }

                return <div>
                    <div class="menu-bar">
                        <button id="add-file">Add Files</button> |
                        <button id="add-folder">Add Folder</button>
                        {drop}
                    </div>
                    <br /><br />
                    {my_files.map((d) => <AFile filePath={d.file_path} sharedWith={d.shared_with} addUsers={d.add_users} />)}
                </div>;
            }

            ["on click at button#add-file"]() {
                let files = Window.this.selectFile({
                    filter: "All Files (*.*)|*.*",
                    mode: "open-multiple",
                });

                if (files) {

                    if ((typeof files) == 'string') { // instanceof isn't working
                        files = [files];
                    }
                    for (let i = 0; i < files.length; i++) {
                        files[i] = decodeURI(files[i]);
                    }

                    let response = Window.this.xcall('add_files', [files]); // Weird: files is already array but I need this extra array here
                    if (response[0] == 0) {
                        setMsgBoxSuccess("File(s) added to share.");
                        this.componentUpdate();
                    }
                    else {
                        setMsgBoxError("Failed to add files. " + response[1]);
                    }
                }
            }

            ["on click at button#add-folder"]() {
                let files = Window.this.selectFolder();
                if (files) {
                    files = decodeURI(files);

                    // This double files array: 
                    // rust add_files expects an array and selectFolder only returns 1 string. Add array.
                    // sciter is expanding a single array into args causing failures, but works with an outer array. Add array.
                    // total == 2 arrays
                    let response = Window.this.xcall('add_files', [[files]]);
                    if (response[0] == 0) {
                        setMsgBoxSuccess("Folder added to share.");
                        this.componentUpdate();
                    }
                    else {
                        setMsgBoxError("Failed to add folder. " + response[1]);
                    }
                }
            }
        }

        // Set port
        document.$("button#set-port").onclick = function () {
            let portValue = document.$("input#port").value;
            let response = Window.this.xcall('set_port', portValue);
            if (response[0] == 0) {
                setMsgBoxSuccess("Port is now set to <strong>" + portValue + "</strong>");
            }
            else {
                setMsgBoxError("Failed to set port. " + response[1]);
            }
        }

        // Set sharing state
        document.$("form.sharing-form").on("click", function () {
            var sharing_state = this.value.Sharing;
            let response = Window.this.xcall('set_my_sharing_state', sharing_state);
            if (response[0] == 0) {
                setMsgBoxSuccess("Sharing is now set to <strong>" + sharing_state + "</strong>");
            }
            else {
                setMsgBoxError("Failed to set sharing state. " + response[1]);
            }
        });

        function getMySharingState() {
            let response = Window.this.xcall('get_my_sharing_state');
            if (response[0] == 0) {
                let sharingButtons = document.querySelectorAll("button[name=Sharing]");
                for (const b of sharingButtons) {
                    b.checked = false;
                }
                document.$("button[name=Sharing][value=" + response[1] + "]").state.checked = true;
            }
            else {
                setMsgBoxError("Failed to get sharing state. " + response[1]);
            }
        }

        document.ready = function () {
            eachPageReady();

            // Get sharing state
            getMySharingState();

            // Get port
            let response = Window.this.xcall('get_sharing_port');
            document.$("input#port").value = response;
            document.$("div#my-files").content(<MyFiles />);

            this.timer(1000, () => {
                let response = Window.this.xcall('get_and_reset_my_sharing_error');
                if (response[0] != 0) {
                    setMsgBoxError(response[1]);
                    getMySharingState();
                }
                return true;
            });
        }



    </script>
</head>

<body>
    <div class="main-body">
        <div id="msg-box"></div>

        <h1>
            My Shared
        </h1>

        <h2>Settings</h2>
        <form class="sharing-form">
            <label>My Sharing:</label>
            <div style="margin-top: 0.5em;">
                <button id="off-radio" type="radio" name="Sharing" value="Off">Off</button>&nbsp;&nbsp;&nbsp;
                <button id="internet-radio" type="radio" name="Sharing"
                    value="Internet">Internet</button>&nbsp;&nbsp;&nbsp;
                <button type="radio" name="Sharing" value="Local">Local Network</button>&nbsp;&nbsp;
            </div>
        </form>
        <br>
        Port:&nbsp; <input id="port" size="8" type="text"></input>&nbsp;&nbsp;&nbsp;<button id="set-port"
            name="set-port" style="font-size: 10pt;">Set Port</button>

        <br><br>
        <h2>My Shared Files</h2>

        <div id="my-files">

        </div>




    </div>
</body>

</html>